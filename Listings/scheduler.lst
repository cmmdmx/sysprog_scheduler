A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\scheduler.obj
ASSEMBLER INVOKED BY: P:\Keil\C51\BIN\A51.EXE scheduler.a51 SET(SMALL) DEBUG PRINT(.\Listings\scheduler.lst) OBJECT(.\Ob
                      jects\scheduler.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;#include <REG517A.h>
                +1     3     
                +1     4     
                +1     5     
                +1     6     
                +1     7     
                +1     8     
                +1     9     
                +1    10     
                +1    11     
                +1    12     
                +1    13     
                +1    14     
  0080          +1    15     sfr   P0     = 0x80;
  0081          +1    16     sfr   SP     = 0x81;
  0082          +1    17     sfr   DPL    = 0x82;
  0083          +1    18     sfr   DPH    = 0x83;
  0084          +1    19     sfr   WDTL   = 0x84;
  0085          +1    20     sfr   WDTH   = 0x85;
  0086          +1    21     sfr   WDTREL = 0x86;
  0087          +1    22     sfr   PCON   = 0x87;
  0088          +1    23     sfr   TCON   = 0x88;
  0089          +1    24     sfr   TMOD   = 0x89;
  008A          +1    25     sfr   TL0    = 0x8A;
  008B          +1    26     sfr   TL1    = 0x8B;
  008C          +1    27     sfr   TH0    = 0x8C;
  008D          +1    28     sfr   TH1    = 0x8D;
                +1    29     
  0090          +1    30     sfr   P1     = 0x90;
  0091          +1    31     sfr   XPAGE  = 0x91;
  0092          +1    32     sfr   DPSEL  = 0x92;
  0098          +1    33     sfr   S0CON  = 0x98;
  0099          +1    34     sfr   S0BUF  = 0x99;
  009A          +1    35     sfr   IEN2   = 0x9A;
  009B          +1    36     sfr   S1CON  = 0x9B;
  009C          +1    37     sfr   S1BUF  = 0x9C;
  009D          +1    38     sfr   S1RELL = 0x9D;
                +1    39     
  00A0          +1    40     sfr   P2     = 0xA0;
  00A1          +1    41     sfr   COMSETL= 0xA1;
  00A2          +1    42     sfr   COMSETH= 0xA2;
                +1    43     sfr16 COMSET = 0xA1;
  00A3          +1    44     sfr   COMCLRL= 0xA3;
  00A4          +1    45     sfr   COMCLRH= 0xA4;
                +1    46     sfr16 COMCLR = 0xA3;
  00A5          +1    47     sfr   SETMSK = 0xA5;
  00A6          +1    48     sfr   CLRMSK = 0xA6;
  00A8          +1    49     sfr   IEN0   = 0xA8;
  00A9          +1    50     sfr   IP0    = 0xA9;
  00AA          +1    51     sfr   S0RELL = 0xAA;
                +1    52     
  00B0          +1    53     sfr   P3     = 0xB0;
  00B1          +1    54     sfr   SYSCON = 0xB1;
  00B8          +1    55     sfr   IEN1   = 0xB8;
  00B9          +1    56     sfr   IP1    = 0xB9;
  00BA          +1    57     sfr   S0RELH = 0xBA;
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE     2

  00BB          +1    58     sfr   S1RELH = 0xBB;
                +1    59     
  00C0          +1    60     sfr   IRCON0 = 0xC0;
  00C1          +1    61     sfr   CCEN   = 0xC1;
  00C2          +1    62     sfr   CCL1   = 0xC2;
  00C3          +1    63     sfr   CCH1   = 0xC3;
                +1    64     sfr16 CC1    = 0xC2;
  00C4          +1    65     sfr   CCL2   = 0xC4;
  00C5          +1    66     sfr   CCH2   = 0xC5;
                +1    67     sfr16 CC2    = 0xC4;
  00C6          +1    68     sfr   CCL3   = 0xC6;
  00C7          +1    69     sfr   CCH3   = 0xC7;
                +1    70     sfr16 CC3    = 0xC6;
  00C8          +1    71     sfr   T2CON  = 0xC8;
  00C9          +1    72     sfr   CC4EN  = 0xC9;
  00CA          +1    73     sfr   CRCL   = 0xCA;
  00CB          +1    74     sfr   CRCH   = 0xCB;
                +1    75     sfr16 CRC    = 0xCA;
  00CC          +1    76     sfr   TL2    = 0xCC;
  00CD          +1    77     sfr   TH2    = 0xCD;
                +1    78     sfr16 T2     = 0xCC;
  00CE          +1    79     sfr   CCL4   = 0xCE;
  00CF          +1    80     sfr   CCH4   = 0xCF;
                +1    81     sfr16 CC4    = 0xCE;
                +1    82     
  00D0          +1    83     sfr   PSW    = 0xD0;
  00D1          +1    84     sfr   IRCON1 = 0xD1;
  00D2          +1    85     sfr   CML0   = 0xD2;
  00D3          +1    86     sfr   CMH0   = 0xD3;
                +1    87     sfr16 CM0    = 0xD2;
  00D4          +1    88     sfr   CML1   = 0xD4;
  00D5          +1    89     sfr   CMH1   = 0xD5;
                +1    90     sfr16 CM1    = 0xD4;
  00D6          +1    91     sfr   CML2   = 0xD6;
  00D7          +1    92     sfr   CMH2   = 0xD7;
                +1    93     sfr16 CM2    = 0xD6;
  00D8          +1    94     sfr   ADCON0 = 0xD8;
  00D9          +1    95     sfr   ADDATH = 0xD9;
  00DA          +1    96     sfr   ADDATL = 0xDA;
  00DB          +1    97     sfr   P7     = 0xDB;
  00DC          +1    98     sfr   ADCON1 = 0xDC;
  00DD          +1    99     sfr   P8     = 0xDD;
  00DE          +1   100     sfr   CTRELL = 0xDE;
  00DF          +1   101     sfr   CTRELH = 0xDF;
                +1   102     sfr16 CTREL  = 0xDE;
                +1   103     
  00E0          +1   104     sfr   ACC    = 0xE0;
  00E1          +1   105     sfr   CTCON  = 0xE1;
  00E2          +1   106     sfr   CML3   = 0xE2;
  00E3          +1   107     sfr   CMH3   = 0xE3;
                +1   108     sfr16 CM3    = 0xE2;
  00E4          +1   109     sfr   CML4   = 0xE4;
  00E5          +1   110     sfr   CMH4   = 0xE5;
                +1   111     sfr16 CM4    = 0xE4;
  00E6          +1   112     sfr   CML5   = 0xE6;
  00E7          +1   113     sfr   CMH5   = 0xE7;
                +1   114     sfr16 CM5    = 0xE6;
  00E8          +1   115     sfr   P4     = 0xE8;
  00E9          +1   116     sfr   MD0    = 0xE9;
  00EA          +1   117     sfr   MD1    = 0xEA;
  00EB          +1   118     sfr   MD2    = 0xEB;
  00EC          +1   119     sfr   MD3    = 0xEC;
  00ED          +1   120     sfr   MD4    = 0xED;
  00EE          +1   121     sfr   MD5    = 0xEE;
  00EF          +1   122     sfr   ARCON  = 0xEF;
                +1   123     
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE     3

  00F0          +1   124     sfr   B      = 0xF0;
  00F2          +1   125     sfr   CML6   = 0xF2;
  00F3          +1   126     sfr   CMH6   = 0xF3;
                +1   127     sfr16 CM6    = 0xF2;
  00F4          +1   128     sfr   CML7   = 0xF4;
  00F5          +1   129     sfr   CMH7   = 0xF5;
                +1   130     sfr16 CM7    = 0xF4;
  00F6          +1   131     sfr   CMEN   = 0xF6;
  00F7          +1   132     sfr   CMSEL  = 0xF7;
  00F8          +1   133     sfr   P5     = 0xF8;
  00FA          +1   134     sfr   P6     = 0xFA;
                +1   135     
                +1   136     
                +1   137     
                +1   138     
                +1   139     
  00D7          +1   140     sbit  CY     = 0xD7;
  00D6          +1   141     sbit  AC     = 0xD6;
  00D5          +1   142     sbit  F0     = 0xD5;
  00D4          +1   143     sbit  RS1    = 0xD4;
  00D3          +1   144     sbit  RS0    = 0xD3;
  00D2          +1   145     sbit  OV     = 0xD2;
  00D1          +1   146     sbit  F1     = 0xD1;
  00D0          +1   147     sbit  P      = 0xD0;
                +1   148     
  008F          +1   149     sbit  TF1    = 0x8F;
  008E          +1   150     sbit  TR1    = 0x8E;
  008D          +1   151     sbit  TF0    = 0x8D;
  008C          +1   152     sbit  TR0    = 0x8C;
  008B          +1   153     sbit  IE1    = 0x8B;
  008A          +1   154     sbit  IT1    = 0x8A;
  0089          +1   155     sbit  IE0    = 0x89;
  0088          +1   156     sbit  IT0    = 0x88;
                +1   157     
  00AF          +1   158     sbit  EAL    = 0xAF;
  00AE          +1   159     sbit  WDT    = 0xAE;
  00AD          +1   160     sbit  ET2    = 0xAD;
  00AC          +1   161     sbit  ES0    = 0xAC;
  00AB          +1   162     sbit  ET1    = 0xAB;
  00AA          +1   163     sbit  EX1    = 0xAA;
  00A9          +1   164     sbit  ET0    = 0xA9;
  00A8          +1   165     sbit  EX0    = 0xA8;
                +1   166     
  00BF          +1   167     sbit  EXEN2  = 0xBF;
  00BE          +1   168     sbit  SWDT   = 0xBE;
  00BD          +1   169     sbit  EX6    = 0xBD;
  00BC          +1   170     sbit  EX5    = 0xBC;
  00BB          +1   171     sbit  EX4    = 0xBB;
  00BA          +1   172     sbit  EX3    = 0xBA;
  00B9          +1   173     sbit  EX2    = 0xB9;
  00B8          +1   174     sbit  EADC   = 0xB8;
                +1   175     
  00B7          +1   176     sbit  RD     = 0xB7;
  00B6          +1   177     sbit  WR     = 0xB6;
  00B5          +1   178     sbit  T1     = 0xB5;
  00B4          +1   179     sbit  T0     = 0xB4;
  00B3          +1   180     sbit  INT1   = 0xB3;
  00B2          +1   181     sbit  INT0   = 0xB2;
  00B1          +1   182     sbit  TXD    = 0xB1;
  00B0          +1   183     sbit  RXD    = 0xB0;
                +1   184     
  009F          +1   185     sbit  SM0    = 0x9F;
  009E          +1   186     sbit  SM1    = 0x9E;
  009D          +1   187     sbit  SM20   = 0x9D;
  009C          +1   188     sbit  REN0   = 0x9C;
  009B          +1   189     sbit  TB80   = 0x9B;
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE     4

  009A          +1   190     sbit  RB80   = 0x9A;
  0099          +1   191     sbit  TI0    = 0x99;
  0098          +1   192     sbit  RI0    = 0x98;
                +1   193     
  00CF          +1   194     sbit  T2PS   = 0xCF;
  00CE          +1   195     sbit  I3FR   = 0xCE;
  00CD          +1   196     sbit  I2FR   = 0xCD;
  00CC          +1   197     sbit  T2R1   = 0xCC;
  00CB          +1   198     sbit  T2R0   = 0xCB;
  00CA          +1   199     sbit  T2CM   = 0xCA;
  00C9          +1   200     sbit  T2I1   = 0xC9;
  00C8          +1   201     sbit  T2I0   = 0xC8;
                +1   202     
  00DF          +1   203     sbit  BD     = 0xDF;
  00DE          +1   204     sbit  CLK    = 0xDE;
  00DD          +1   205     sbit  ADEX   = 0xDD;
  00DC          +1   206     sbit  BSY    = 0xDC;
  00DB          +1   207     sbit  ADM    = 0xDB;
  00DA          +1   208     sbit  MX2    = 0xDA;
  00D9          +1   209     sbit  MX1    = 0xD9;
  00D8          +1   210     sbit  MX0    = 0xD8;
                +1   211     
  00C7          +1   212     sbit  EXF2   = 0xC7;
  00C6          +1   213     sbit  TF2    = 0xC6;
  00C5          +1   214     sbit  IEX6   = 0xC5;
  00C4          +1   215     sbit  IEX5   = 0xC4;
  00C3          +1   216     sbit  IEX4   = 0xC3;
  00C2          +1   217     sbit  IEX3   = 0xC2;
  00C1          +1   218     sbit  IEX2   = 0xC1;
  00C0          +1   219     sbit  IADC   = 0xC0;
                +1   220     
                +1   221     
                     222     
                     223     
                     224     NAME scheduler
                     225             
                     226             PUBLIC scheduler 
                     227             PUBLIC process_start
                     228             PUBLIC process_stop
                     229                     
                     230             EXTRN CODE(run_a)
                     231             EXTRN CODE(run_b)
                     232             EXTRN CODE(run_c)
                     233             EXTRN CODE(fkt_text)
                     234                     
                     235             EXTRN DATA (next_process)
                     236             EXTRN DATA (next_process_priority)
                     237             EXTRN BIT (first_run)
                     238                     
                     239             ; data of scheduler
                     240             schedule_data SEGMENT DATA
                     241                     
----                 242                     RSEG schedule_data
                     243                     
0000                 244                     puffer_a: DS 1
0001                 245                     puffer_b: DS 1
0002                 246                     puffer_r0: DS 1
                     247                     
0003                 248                     process_table: DS 4                                                     ; a
                             ctive processes are stored here
0007                 249                     process_time: DS 4                                                      ; p
                             rocess times to affect priorities
000B                 250                     process_current: DS 1                                           ; current p
                             rocess
000C                 251                     process_stack: DS 16                                            ; 4 byte as
                              stack for 4 processes
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE     5

001C                 252                     process_state: DS 56                                            ; 4 * 14 by
                             te to save register etc. for the processes
                     253                     
                     254                             
                     255             _code SEGMENT CODE
----                 256                     RSEG _code
                     257                     
0000 0000     F      258             process_locations: DW run_c, run_a, run_b, fkt_text
0002 0000     F              
0004 0000     F              
0006 0000     F              
                     259             
                     260             
                     261             
                     262             
0008                 263             process_start:
                     264             
0008 E500     F      265                     MOV A, next_process
                     266                     
                     267                     ; Set process time
000A 2400     F      268                     ADD A, #process_time
000C F8              269                     MOV R0, A
000D A600     F      270                     MOV @R0, next_process_priority
                     271                                     
                     272                     ; get Stack position
000F E500     F      273                     MOV A, next_process
0011 75F004          274                     MOV B, #4
0014 A4              275                     MUL AB
0015 2400     F      276                     ADD A, #process_stack
0017 F9              277                     MOV R1, A                                                               ; s
                             tack start adress of process in r1
                     278                     
0018 E500     F      279                     MOV A, next_process                                             ; get proce
                             ss start adress
001A 75F002          280                     MOV B, #2
001D A4              281                     MUL AB
001E FE              282                     MOV R6, A
001F 900000   F      283                     MOV DPTR, #process_locations
0022 93              284                     MOVC A, @A+DPTR
0023 FD              285                     MOV R5, A
0024 EE              286                     MOV A, R6
0025 04              287                     INC A
0026 93              288                     MOVC A, @A+DPTR
                     289                     
0027 F582            290                     MOV DPL, A
0029 8D83            291                     MOV DPH, R5
                     292                     
002B A782            293                     MOV @R1, DPL
002D 09              294                     INC R1
002E A783            295                     MOV @R1, DPH
                     296                     
0030 E500     F      297                     MOV A, next_process
                     298                     
0032 75F00E          299                     MOV B, #14
0035 A4              300                     MUL AB
0036 2400     F      301                     ADD A, #process_state
0038 F8              302                     MOV R0, A                                                               ; R
                             0 start adress for saving state
                     303                     
0039 E9              304                     MOV A, R1
003A F6              305                     MOV @R0, A                                                              ; s
                             et stack to beginning
                     306                     
003B E8              307                     MOV A, R0
003C 08              308                     INC R0
003D 7901            309                     MOV R1, #1                                                              ; R
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE     6

                             1 is Iteration variable
                     310                     
003F                 311                     process_reset:
                     312                             
003F 7600            313                             MOV @R0, #0
0041 08              314                             INC R0
0042 09              315                             INC R1
0043 B90EF9          316                             CJNE R1, #14, process_reset
                     317                     
0046 E500     F      318                     MOV A, next_process
0048 2400     F      319                     ADD A, #process_table
004A F8              320                     MOV R0, A
004B 76FF            321                     MOV @R0, #0xFF
004D 22              322                     RET
                     323                     
004E                 324             process_stop:
                     325                     
004E E500     F      326                     MOV A, next_process
0050 2400     F      327                     ADD A, #process_table
0052 F8              328                     MOV R0, A
0053 7600            329                     MOV @R0, #0
                     330                     
0055 D28D            331                     SETB TF0
0057 22              332                     RET
                     333                     
0058                 334             scheduler:
                     335                     
0058 C2AF            336                     CLR EAL
005A C28C            337                     CLR TR0
                     338                     
005C D2AE            339                     SETB WDT                                                                ; W
                             atchdog reset
005E D2BE            340                     SETB SWDT
                     341                     
0060 F500     F      342                     MOV puffer_a, A                                                 ; temp save
                              A
0062 85F000   F      343                     MOV puffer_b, B                                                 ; temp save
                              B
0065 8800     F      344                     MOV puffer_r0, R0                                               ; temp save
                              R0
                     345                     
0067 100035   F      346                     JBC first_run, find_process                             ; saving everything
                              is not necessary on first run
                     347                     
006A E500     F      348                     MOV A, process_current
                     349                     
006C 75F00E          350                     MOV B, #14                                                              ; s
                             ave state of current running process
006F A4              351                     MUL AB
0070 2400     F      352                     ADD A, #process_state
0072 F8              353                     MOV R0, A
                     354                     
0073 A681            355                     MOV @R0, SP
0075 08              356                     INC R0
0076 A600     F      357                     MOV @R0, puffer_a
0078 08              358                     INC R0
0079 A600     F      359                     MOV @R0, puffer_b
007B 08              360                     INC R0
007C E5D0            361                     MOV A, PSW
007E F6              362                     MOV @R0, A
007F 08              363                     INC R0
0080 E583            364                     MOV A, DPH
0082 F6              365                     MOV @R0, A
0083 08              366                     INC R0
0084 E582            367                     MOV A, DPL
0086 F6              368                     MOV @R0, A
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE     7

0087 08              369                     INC R0
0088 A600     F      370                     MOV @R0, puffer_r0
008A 08              371                     INC R0
008B E9              372                     MOV A, R1
008C F6              373                     MOV @R0, A
008D 08              374                     INC R0
008E EA              375                     MOV A, R2
008F F6              376                     MOV @R0, A
0090 08              377                     INC R0
0091 EB              378                     MOV A, R3
0092 F6              379                     MOV @R0, A
0093 08              380                     INC R0
0094 EC              381                     MOV A, R4
0095 F6              382                     MOV @R0, A
0096 08              383                     INC R0
0097 ED              384                     MOV A, R5
0098 F6              385                     MOV @R0, A
0099 08              386                     INC R0
009A EE              387                     MOV A, R6
009B F6              388                     MOV @R0, A
009C 08              389                     INC R0
009D EF              390                     MOV A, R7
009E F6              391                     MOV @R0, A
                     392                     
009F                 393                     find_process:
                     394                             
009F 0500     F      395                             INC process_current
00A1 E500     F      396                             MOV A, process_current
00A3 B40403          397                             CJNE A, #4, check_process
00A6 750000   F      398                             MOV process_current, #0
                     399                             
00A9                 400                     check_process:
                     401                     
00A9 7400     F      402                             MOV A, #process_table
00AB 2500     F      403                             ADD A, process_current
00AD F8              404                             MOV R0, A
00AE B6FFEE          405                             CJNE @R0, #0xff, find_process
                     406                     
                     407                     
00B1 7400     F      408                     MOV A, #process_time
00B3 2500     F      409                     ADD A, process_current
00B5 F8              410                     MOV R0, A
00B6 E6              411                     MOV A, @R0
00B7 F58C            412                     MOV TH0, A
                     413                     
00B9 E500     F      414                     MOV A, process_current
00BB 75F00E          415                     MOV B, #14
00BE A4              416                     MUL AB
00BF 2400     F      417                     ADD A, #process_state
00C1 F8              418                     MOV R0, A
                     419                     
00C2 E6              420                     MOV A, @R0
00C3 F581            421                     MOV SP, A
00C5 08              422                     INC R0
00C6 8600     F      423                     MOV puffer_a, @R0
00C8 08              424                     INC R0
00C9 8600     F      425                     MOV puffer_b, @R0
00CB 08              426                     INC R0
00CC E6              427                     MOV A, @R0
00CD F5D0            428                     MOV PSW, A
00CF 08              429                     INC R0
00D0 E6              430                     MOV A, @R0
00D1 F583            431                     MOV DPH, A
00D3 08              432                     INC R0
00D4 E6              433                     MOV A, @R0
00D5 F582            434                     MOV DPL, A
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE     8

00D7 08              435                     INC R0
00D8 8600     F      436                     MOV puffer_r0, @R0
00DA 08              437                     INC R0
00DB E6              438                     MOV A, @R0
00DC F9              439                     MOV R1, A
00DD 08              440                     INC R0
00DE E6              441                     MOV A, @R0
00DF FA              442                     MOV R2, A
00E0 08              443                     INC R0
00E1 E6              444                     MOV A, @R0
00E2 FB              445                     MOV R3, A
00E3 08              446                     INC R0
00E4 E6              447                     MOV A, @R0
00E5 FC              448                     MOV R4, A
00E6 08              449                     INC R0
00E7 E6              450                     MOV A, @R0
00E8 FD              451                     MOV R5, A
00E9 08              452                     INC R0
00EA E6              453                     MOV A, @R0
00EB FE              454                     MOV R6, A
00EC 08              455                     INC R0
00ED E6              456                     MOV A, @R0
00EE FF              457                     MOV R7, A
                     458                     
00EF E500     F      459                     MOV A, puffer_a
00F1 8500F0   F      460                     MOV B, puffer_b
00F4 A800     F      461                     MOV R0, puffer_r0
                     462                             
00F6 D28C            463                     SETB TR0
00F8 D2AF            464                     SETB EAL
00FA 32              465                     RETI
                     466     
                     467     END
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE     9

SYMBOL TABLE LISTING
------ ----- -------


N A M E                T Y P E  V A L U E   ATTRIBUTES

AC. . . . . . . . . .  B ADDR   00D0H.6 A   
ACC . . . . . . . . .  D ADDR   00E0H   A   
ADCON0. . . . . . . .  D ADDR   00D8H   A   
ADCON1. . . . . . . .  D ADDR   00DCH   A   
ADDATH. . . . . . . .  D ADDR   00D9H   A   
ADDATL. . . . . . . .  D ADDR   00DAH   A   
ADEX. . . . . . . . .  B ADDR   00D8H.5 A   
ADM . . . . . . . . .  B ADDR   00D8H.3 A   
ARCON . . . . . . . .  D ADDR   00EFH   A   
B . . . . . . . . . .  D ADDR   00F0H   A   
BD. . . . . . . . . .  B ADDR   00D8H.7 A   
BSY . . . . . . . . .  B ADDR   00D8H.4 A   
CC1 . . . . . . . . .    ----   -----       
CC2 . . . . . . . . .    ----   -----       
CC3 . . . . . . . . .    ----   -----       
CC4 . . . . . . . . .    ----   -----       
CC4EN . . . . . . . .  D ADDR   00C9H   A   
CCEN. . . . . . . . .  D ADDR   00C1H   A   
CCH1. . . . . . . . .  D ADDR   00C3H   A   
CCH2. . . . . . . . .  D ADDR   00C5H   A   
CCH3. . . . . . . . .  D ADDR   00C7H   A   
CCH4. . . . . . . . .  D ADDR   00CFH   A   
CCL1. . . . . . . . .  D ADDR   00C2H   A   
CCL2. . . . . . . . .  D ADDR   00C4H   A   
CCL3. . . . . . . . .  D ADDR   00C6H   A   
CCL4. . . . . . . . .  D ADDR   00CEH   A   
CHECK_PROCESS . . . .  C ADDR   00A9H   R   SEG=_CODE
CLK . . . . . . . . .  B ADDR   00D8H.6 A   
CLRMSK. . . . . . . .  D ADDR   00A6H   A   
CM0 . . . . . . . . .    ----   -----       
CM1 . . . . . . . . .    ----   -----       
CM2 . . . . . . . . .    ----   -----       
CM3 . . . . . . . . .    ----   -----       
CM4 . . . . . . . . .    ----   -----       
CM5 . . . . . . . . .    ----   -----       
CM6 . . . . . . . . .    ----   -----       
CM7 . . . . . . . . .    ----   -----       
CMEN. . . . . . . . .  D ADDR   00F6H   A   
CMH0. . . . . . . . .  D ADDR   00D3H   A   
CMH1. . . . . . . . .  D ADDR   00D5H   A   
CMH2. . . . . . . . .  D ADDR   00D7H   A   
CMH3. . . . . . . . .  D ADDR   00E3H   A   
CMH4. . . . . . . . .  D ADDR   00E5H   A   
CMH5. . . . . . . . .  D ADDR   00E7H   A   
CMH6. . . . . . . . .  D ADDR   00F3H   A   
CMH7. . . . . . . . .  D ADDR   00F5H   A   
CML0. . . . . . . . .  D ADDR   00D2H   A   
CML1. . . . . . . . .  D ADDR   00D4H   A   
CML2. . . . . . . . .  D ADDR   00D6H   A   
CML3. . . . . . . . .  D ADDR   00E2H   A   
CML4. . . . . . . . .  D ADDR   00E4H   A   
CML5. . . . . . . . .  D ADDR   00E6H   A   
CML6. . . . . . . . .  D ADDR   00F2H   A   
CML7. . . . . . . . .  D ADDR   00F4H   A   
CMSEL . . . . . . . .  D ADDR   00F7H   A   
COMCLR. . . . . . . .    ----   -----       
COMCLRH . . . . . . .  D ADDR   00A4H   A   
COMCLRL . . . . . . .  D ADDR   00A3H   A   
COMSET. . . . . . . .    ----   -----       
COMSETH . . . . . . .  D ADDR   00A2H   A   
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE    10

COMSETL . . . . . . .  D ADDR   00A1H   A   
CRC . . . . . . . . .    ----   -----       
CRCH. . . . . . . . .  D ADDR   00CBH   A   
CRCL. . . . . . . . .  D ADDR   00CAH   A   
CTCON . . . . . . . .  D ADDR   00E1H   A   
CTREL . . . . . . . .    ----   -----       
CTRELH. . . . . . . .  D ADDR   00DFH   A   
CTRELL. . . . . . . .  D ADDR   00DEH   A   
CY. . . . . . . . . .  B ADDR   00D0H.7 A   
DPH . . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . . .  D ADDR   0082H   A   
DPSEL . . . . . . . .  D ADDR   0092H   A   
EADC. . . . . . . . .  B ADDR   00B8H.0 A   
EAL . . . . . . . . .  B ADDR   00A8H.7 A   
ES0 . . . . . . . . .  B ADDR   00A8H.4 A   
ET0 . . . . . . . . .  B ADDR   00A8H.1 A   
ET1 . . . . . . . . .  B ADDR   00A8H.3 A   
ET2 . . . . . . . . .  B ADDR   00A8H.5 A   
EX0 . . . . . . . . .  B ADDR   00A8H.0 A   
EX1 . . . . . . . . .  B ADDR   00A8H.2 A   
EX2 . . . . . . . . .  B ADDR   00B8H.1 A   
EX3 . . . . . . . . .  B ADDR   00B8H.2 A   
EX4 . . . . . . . . .  B ADDR   00B8H.3 A   
EX5 . . . . . . . . .  B ADDR   00B8H.4 A   
EX6 . . . . . . . . .  B ADDR   00B8H.5 A   
EXEN2 . . . . . . . .  B ADDR   00B8H.7 A   
EXF2. . . . . . . . .  B ADDR   00C0H.7 A   
F0. . . . . . . . . .  B ADDR   00D0H.5 A   
F1. . . . . . . . . .  B ADDR   00D0H.1 A   
FIND_PROCESS. . . . .  C ADDR   009FH   R   SEG=_CODE
FIRST_RUN . . . . . .  B ADDR   -----       EXT
FKT_TEXT. . . . . . .  C ADDR   -----       EXT
I2FR. . . . . . . . .  B ADDR   00C8H.5 A   
I3FR. . . . . . . . .  B ADDR   00C8H.6 A   
IADC. . . . . . . . .  B ADDR   00C0H.0 A   
IE0 . . . . . . . . .  B ADDR   0088H.1 A   
IE1 . . . . . . . . .  B ADDR   0088H.3 A   
IEN0. . . . . . . . .  D ADDR   00A8H   A   
IEN1. . . . . . . . .  D ADDR   00B8H   A   
IEN2. . . . . . . . .  D ADDR   009AH   A   
IEX2. . . . . . . . .  B ADDR   00C0H.1 A   
IEX3. . . . . . . . .  B ADDR   00C0H.2 A   
IEX4. . . . . . . . .  B ADDR   00C0H.3 A   
IEX5. . . . . . . . .  B ADDR   00C0H.4 A   
IEX6. . . . . . . . .  B ADDR   00C0H.5 A   
INT0. . . . . . . . .  B ADDR   00B0H.2 A   
INT1. . . . . . . . .  B ADDR   00B0H.3 A   
IP0 . . . . . . . . .  D ADDR   00A9H   A   
IP1 . . . . . . . . .  D ADDR   00B9H   A   
IRCON0. . . . . . . .  D ADDR   00C0H   A   
IRCON1. . . . . . . .  D ADDR   00D1H   A   
IT0 . . . . . . . . .  B ADDR   0088H.0 A   
IT1 . . . . . . . . .  B ADDR   0088H.2 A   
MD0 . . . . . . . . .  D ADDR   00E9H   A   
MD1 . . . . . . . . .  D ADDR   00EAH   A   
MD2 . . . . . . . . .  D ADDR   00EBH   A   
MD3 . . . . . . . . .  D ADDR   00ECH   A   
MD4 . . . . . . . . .  D ADDR   00EDH   A   
MD5 . . . . . . . . .  D ADDR   00EEH   A   
MX0 . . . . . . . . .  B ADDR   00D8H.0 A   
MX1 . . . . . . . . .  B ADDR   00D8H.1 A   
MX2 . . . . . . . . .  B ADDR   00D8H.2 A   
NEXT_PROCESS. . . . .  D ADDR   -----       EXT
NEXT_PROCESS_PRIORITY  D ADDR   -----       EXT
OV. . . . . . . . . .  B ADDR   00D0H.2 A   
P . . . . . . . . . .  B ADDR   00D0H.0 A   
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE    11

P0. . . . . . . . . .  D ADDR   0080H   A   
P1. . . . . . . . . .  D ADDR   0090H   A   
P2. . . . . . . . . .  D ADDR   00A0H   A   
P3. . . . . . . . . .  D ADDR   00B0H   A   
P4. . . . . . . . . .  D ADDR   00E8H   A   
P5. . . . . . . . . .  D ADDR   00F8H   A   
P6. . . . . . . . . .  D ADDR   00FAH   A   
P7. . . . . . . . . .  D ADDR   00DBH   A   
P8. . . . . . . . . .  D ADDR   00DDH   A   
PCON. . . . . . . . .  D ADDR   0087H   A   
PROCESS_CURRENT . . .  D ADDR   000BH   R   SEG=SCHEDULE_DATA
PROCESS_LOCATIONS . .  C ADDR   0000H   R   SEG=_CODE
PROCESS_RESET . . . .  C ADDR   003FH   R   SEG=_CODE
PROCESS_STACK . . . .  D ADDR   000CH   R   SEG=SCHEDULE_DATA
PROCESS_START . . . .  C ADDR   0008H   R   SEG=_CODE
PROCESS_STATE . . . .  D ADDR   001CH   R   SEG=SCHEDULE_DATA
PROCESS_STOP. . . . .  C ADDR   004EH   R   SEG=_CODE
PROCESS_TABLE . . . .  D ADDR   0003H   R   SEG=SCHEDULE_DATA
PROCESS_TIME. . . . .  D ADDR   0007H   R   SEG=SCHEDULE_DATA
PSW . . . . . . . . .  D ADDR   00D0H   A   
PUFFER_A. . . . . . .  D ADDR   0000H   R   SEG=SCHEDULE_DATA
PUFFER_B. . . . . . .  D ADDR   0001H   R   SEG=SCHEDULE_DATA
PUFFER_R0 . . . . . .  D ADDR   0002H   R   SEG=SCHEDULE_DATA
RB80. . . . . . . . .  B ADDR   0098H.2 A   
RD. . . . . . . . . .  B ADDR   00B0H.7 A   
REN0. . . . . . . . .  B ADDR   0098H.4 A   
RI0 . . . . . . . . .  B ADDR   0098H.0 A   
RS0 . . . . . . . . .  B ADDR   00D0H.3 A   
RS1 . . . . . . . . .  B ADDR   00D0H.4 A   
RUN_A . . . . . . . .  C ADDR   -----       EXT
RUN_B . . . . . . . .  C ADDR   -----       EXT
RUN_C . . . . . . . .  C ADDR   -----       EXT
RXD . . . . . . . . .  B ADDR   00B0H.0 A   
S0BUF . . . . . . . .  D ADDR   0099H   A   
S0CON . . . . . . . .  D ADDR   0098H   A   
S0RELH. . . . . . . .  D ADDR   00BAH   A   
S0RELL. . . . . . . .  D ADDR   00AAH   A   
S1BUF . . . . . . . .  D ADDR   009CH   A   
S1CON . . . . . . . .  D ADDR   009BH   A   
S1RELH. . . . . . . .  D ADDR   00BBH   A   
S1RELL. . . . . . . .  D ADDR   009DH   A   
SCHEDULER . . . . . .  C ADDR   0058H   R   SEG=_CODE
SCHEDULE_DATA . . . .  D SEG    0054H       REL=UNIT
SETMSK. . . . . . . .  D ADDR   00A5H   A   
SM0 . . . . . . . . .  B ADDR   0098H.7 A   
SM1 . . . . . . . . .  B ADDR   0098H.6 A   
SM20. . . . . . . . .  B ADDR   0098H.5 A   
SP. . . . . . . . . .  D ADDR   0081H   A   
SWDT. . . . . . . . .  B ADDR   00B8H.6 A   
SYSCON. . . . . . . .  D ADDR   00B1H   A   
T0. . . . . . . . . .  B ADDR   00B0H.4 A   
T1. . . . . . . . . .  B ADDR   00B0H.5 A   
T2. . . . . . . . . .    ----   -----       
T2CM. . . . . . . . .  B ADDR   00C8H.2 A   
T2CON . . . . . . . .  D ADDR   00C8H   A   
T2I0. . . . . . . . .  B ADDR   00C8H.0 A   
T2I1. . . . . . . . .  B ADDR   00C8H.1 A   
T2PS. . . . . . . . .  B ADDR   00C8H.7 A   
T2R0. . . . . . . . .  B ADDR   00C8H.3 A   
T2R1. . . . . . . . .  B ADDR   00C8H.4 A   
TB80. . . . . . . . .  B ADDR   0098H.3 A   
TCON. . . . . . . . .  D ADDR   0088H   A   
TF0 . . . . . . . . .  B ADDR   0088H.5 A   
TF1 . . . . . . . . .  B ADDR   0088H.7 A   
TF2 . . . . . . . . .  B ADDR   00C0H.6 A   
TH0 . . . . . . . . .  D ADDR   008CH   A   
A51 MACRO ASSEMBLER  SCHEDULER                                                            04/24/2016 13:00:55 PAGE    12

TH1 . . . . . . . . .  D ADDR   008DH   A   
TH2 . . . . . . . . .  D ADDR   00CDH   A   
TI0 . . . . . . . . .  B ADDR   0098H.1 A   
TL0 . . . . . . . . .  D ADDR   008AH   A   
TL1 . . . . . . . . .  D ADDR   008BH   A   
TL2 . . . . . . . . .  D ADDR   00CCH   A   
TMOD. . . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . . .  B ADDR   0088H.6 A   
TXD . . . . . . . . .  B ADDR   00B0H.1 A   
WDT . . . . . . . . .  B ADDR   00A8H.6 A   
WDTH. . . . . . . . .  D ADDR   0085H   A   
WDTL. . . . . . . . .  D ADDR   0084H   A   
WDTREL. . . . . . . .  D ADDR   0086H   A   
WR. . . . . . . . . .  B ADDR   00B0H.6 A   
XPAGE . . . . . . . .  D ADDR   0091H   A   
_CODE . . . . . . . .  C SEG    00FBH       REL=UNIT


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
